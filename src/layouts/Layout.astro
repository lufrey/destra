---
export interface Props {
  title: string;
}

const { title } = Astro.props;
const year = new Date().getFullYear();
---

<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="stylesheet" href="/fonts/fonts.css" />
    <meta name="generator" content={Astro.generator} />
    <meta name="robots" content="noindex, nofollow" />
    <title>{title}</title>
  </head>
  <body>
    <header class="bg-white">
      <div class="flex justify-between max-w-screen-lg py-6 pl-10 pr-16 m-auto">
        <a href="/">Destra Robotics</a>
        <div class="hidden gap-10 uppercase links md:flex">
          <a class="hover:underline" href="/about">About</a>
          <a class="hover:underline" href="#">Team</a>
          <a class="hover:underline" href="/project">Project</a>
          <a class="hover:underline" href="#">Contact</a>
        </div>
      </div>
    </header>
    <slot />
    <footer>
      <div class="bg-primary">
        <div
          class="flex max-w-screen-lg gap-10 px-10 py-6 m-auto text-gray-300 fadein"
        >
          <div>Destra Robotics</div>
          <a class="hover:underline" href="#">Impressum</a>
          <div>Copyright - {year}</div>
        </div>
      </div>
    </footer>
  </body>
  <script>
    const targets = Array.from(document.querySelectorAll('.fadein') ?? []);
    targets.forEach((target) => {
      target.classList.add('opacity-0', 'invisible');

      if (!target.classList.contains('no-translate')) {
        target.classList.add('translate-y-2');
      }
    });

    const fadeInClasses = [
      'opacity-100',
      'visible',
      'transition-all',
      'duration-1000',
      'delay-350',
      'translate-y-0',
    ];

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add(...fadeInClasses);
          entry.target.classList.remove(
            'opacity-0',
            'invisible',
            'translate-y-2'
          );
          observer.unobserve(entry.target);
          setTimeout(() => {
            entry.target.classList.remove(...fadeInClasses);
          }, 1000);
        }
      });
    });
    targets.forEach((target) => observer.observe(target));
  </script>
</html>
